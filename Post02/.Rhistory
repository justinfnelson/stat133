knitr::opts_chunk$set(echo = TRUE)
capitalize('test)
dat <- dat %>%
mutate(state =state.name[match(dat$state,state.abb)])
capitalize('test')
capitalize(test)
library('Hmisc')
capitalize(test)
capitalize('test')
dat
library('dplyr')
library('ggplot2')
library('maps')
# Save the web address as a variable
site <- 'https://raw.githubusercontent.com/vincentarelbundock/Rdatasets/master/csv/car/States.csv'
#Download the contents of the file to a local directory, and then use the read.csv function to acquire the data, as it's stored as a CSV file online and on our machine.
download.file(site, destfile = 'data/state_education_data.csv')
dat <- read.csv('data/state_education_data.csv')
dat <- dat %>%
rename(state = X) %>%
select(state, SATV, SATM, percent, dollars) %>%
mutate(SAT = SATV + SATM)
head(dat)
# Correlation between spending on student and percentage of students who take SAT
percent_cors <- format(cor(dat$dollars, dat$percent), digits = 2)
print(percent_cors)
# Correlation between spending on student and scoring on SAT
score_cors <- format(cor(dat$dollars, dat$SAT), digits = 2)
print(score_cors)
#Acquiring outlines of all 50 states with map_data
states <- map_data('state')
us <- ggplot(states, aes(x = long, y = lat)) + geom_polygon(aes(group = group), color = 'yellow')
us
dat
states
dat
state.name[match(dat$state, state.abb)]
dat <- dat %>%
mutate(state = state.name[match(dat$state, state.abb)])
dat
states
states <- states %>%
mutate(region = capitalize(region) )
states
dat <- dat %>%
mutate(state = state.name[match(dat$state, state.abb)])
states <- states %>%
mutate(state = capitalize(region))
dat
dat <- dat %>%
rename(state = X) %>%
select(state, SATV, SATM, percent, dollars) %>%
mutate(SAT = SATV + SATM)
site <- 'https://raw.githubusercontent.com/vincentarelbundock/Rdatasets/master/csv/car/States.csv'
download.file(site, destfile = 'data/state_education_data.csv')
dat <- read.csv('data/state_education_data.csv')
dat <- dat %>%
rename(state = X) %>%
select(state, SATV, SATM, percent, dollars) %>%
mutate(SAT = SATV + SATM)
head(dat)
ggplot(dat, aes(x=dollars, y=SAT)) + geom_point() + labs(x='Spending in $1000 per student', y = 'SAT Score') + geom_smooth(method = 'lm')
states <- map_data('state')
us <- ggplot(states, aes(x = long, y = lat)) + geom_polygon(aes(group = group), color = 'yellow')
us
dat <- dat %>%
mutate(state = state.name[match(dat$state, state.abb)])
states <- states %>%
mutate(state = capitalize(region))
dat
states
joined <- inner_join(dat, states, 'state')
joined
funding_map <- us + geom_polygon(joined, aes(x=long, y = lat))
class(joined)
funding_map <- us + geom_polygon(joined, aes(x=long, y = lat, group = group))
funding_map <- us + geom_polygon(joined, aes(x = long, y = lat, group = group))
us
funding_map <- us + geom_polygon(joined, aes(x = long, y = lat, group = group))
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group))
funding_map
joined
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group), fill = dollars )
joined
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group), fill = 'dollars')
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = 'dollars'))
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = 'dollars')) + scale_fill_gradient(low = "white", high = "red")
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = as.numeric('dollars')) + scale_fill_gradient(low = "white", high = "red")
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = 'dollars') + scale_fill_gradient(low = "white", high = "red")
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = 'dollars') + scale_fill_gradient(low = "white", high = "red")
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = 'dollars') + scale_fill_gradient(low = "white", high = "red"))
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = dollars) + scale_fill_gradient(low = "white", high = "red"))
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat ,group = group, fill = dollars), color = "white") + scale_fill_gradient(low = "white", high = "red")
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat ,group = group, fill = dollars), color = "yellow") + scale_fill_gradient(low = "white", high = "red")
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat ,group = group, fill = dollars), color = "yellow") + scale_fill_gradient(low = "blue", high = "red")
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat ,group = group, fill = dollars), color = "yellow") + scale_fill_gradient(low = "white", high = "red")
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat ,group = group, fill = dollars), color = "yellow") + scale_fill_gradient(low = "white", high = "blue")
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat ,group = group, fill = dollars), color = "yellow") + scale_fill_gradient(low = "white", high = "blue", name = 'Dollars Spent Per Student (1000s)') + title
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat ,group = group, fill = dollars), color = "yellow") + scale_fill_gradient(low = "white", high = "blue", name = 'Dollars Spent Per Student (1000s)')
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat ,group = group, fill = dollars), color = "yellow") + scale_fill_gradient(low = "white", high = "blue", name = 'Dollars Per Student (1000s)')
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat ,group = group, fill = dollars), color = "yellow") + scale_fill_gradient(low = "white", high = "blue", name = 'Dollars Per Student
(1000s)')
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat ,group = group, fill = dollars), color = "yellow") + scale_fill_gradient(low = "white", high = "blue", name = 'Dollars Per Student
(1000s)')
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat ,group = group, fill = dollars), color = "yellow") + scale_fill_gradient(low = "white", high = "blue", name = 'Dollars / Student
(1000s)')
funding_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat ,group = group, fill = dollars), color = "yellow") + scale_fill_gradient(low = "white", high = "blue", name = 'Dollars/Student
(1000s)')
funding_map
joined
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = percent), color = "yellow") + scale_fill_gradient(low = "white", high = "blue", name = '% Take SAT')
funding_map
take_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = percent), color = "yellow") + scale_fill_gradient(low = "white", high = "blue", name = '% Take SAT')
take_map
joined
score_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = SAT), color = "yellow") + scale_fill_gradient(low = "white", high = "blue", name = 'SAT Score')
joined
take_map
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = dollars) + scale_fill_gradient(low = "white", high = "red"))
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = dollars) + scale_fill_gradient(low = "white", high = "red"))
funding_map <- us + geom_polygon(data = joined, aes(x = long, y = lat ,group = group, fill = dollars), color = "yellow") + scale_fill_gradient(low = "white", high = "blue", name = 'Dollars/Student
(1000s)')
take_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = percent), color = "yellow") + scale_fill_gradient(low = "white", high = "blue", name = '% Take SAT')
score_map <- us + geom_polygon(data = joined, aes(x = long, y = lat, group = group, fill = SAT), color = "yellow") + scale_fill_gradient(low = "white", high = "blue", name = 'SAT Score')
